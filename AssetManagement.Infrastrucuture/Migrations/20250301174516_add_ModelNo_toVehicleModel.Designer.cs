// <auto-generated />
using System;
using AssetManagement.Infrastrucuture.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetManagement.Infrastrucuture.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250301174516_add_ModelNo_toVehicleModel")]
    partial class add_ModelNo_toVehicleModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AssetManagement.Domain.Entities.DocumentationDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CancellationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuplicateKeySerialNo")
                        .HasColumnType("int");

                    b.Property<int?>("FileNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FirstRegisteredWithUsOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("GPSServiceVendorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPSType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GPS_GSM")
                        .HasColumnType("int");

                    b.Property<int?>("GPS_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsuranceExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastOdometer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MadeIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnershipStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RoadPermitExpiry")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("YearMade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DocumentationDetails");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.DriverSafetyCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCompleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCertified")
                        .HasColumnType("bit");

                    b.Property<Guid>("SafetyCriteriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("SafetyCriteriaId");

                    b.ToTable("DriverSafetyCompliances");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.InspectionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastInspection")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NextInspection")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("InspectionRecord");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactInCharge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("DivisionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("901b2c5e-fc7a-441b-9d79-4940b60b69cc"),
                            ContactInCharge = "John Doe",
                            CostCenter = "Fleet Management",
                            DivisionName = "Devision 1",
                            LocationName = "Main Garage",
                            ProjectName = "Fleet Management"
                        },
                        new
                        {
                            Id = new Guid("8346b56d-d507-4dd7-99ba-3a17881cc642"),
                            ContactInCharge = "Jane Smith",
                            CostCenter = "Logistics",
                            DivisionName = "Devision 1",
                            LocationName = "East Warehouse",
                            ProjectName = "Logistics"
                        },
                        new
                        {
                            Id = new Guid("441d36b4-dfcd-4817-afe1-27a67a1b218c"),
                            ContactInCharge = "Michael Brown",
                            CostCenter = "Construction",
                            DivisionName = "Devision 1",
                            LocationName = "North Yard",
                            ProjectName = "Construction"
                        },
                        new
                        {
                            Id = new Guid("6fa5b8c6-6f12-4ace-8232-2c06454b64a1"),
                            ContactInCharge = "Emily Davis",
                            CostCenter = "Distribution",
                            DivisionName = "Devision 1",
                            LocationName = "West Depot",
                            ProjectName = "Distribution"
                        },
                        new
                        {
                            Id = new Guid("8733e63f-6446-4b91-b7b6-744a8cfcf75e"),
                            ContactInCharge = "Robert Wilson",
                            CostCenter = "Transport Hub",
                            DivisionName = "Devision 1",
                            LocationName = "South Terminal",
                            ProjectName = "Transport Hub"
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.MaintenanceRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MaintenanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaintenanceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("MaintenanceRecord");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.Permit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PermitDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermitHolder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermitType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Permits");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.SafetyCriteria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CriteriaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequiredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SafetyCriterias");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.SafetyEquipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InstalledDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("SafetyEquipments");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedDriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Co2Standard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactInCharge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentStattionlStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DocumentationDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmissionSpec")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EngineCo2Emission")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstimatedEndOfTermValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Horsepower")
                        .HasColumnType("int");

                    b.Property<decimal>("InitialManufacturerPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastInspection")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaintenanceStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NextInspection")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperationalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PurchaseValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SystemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehicleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VehicleTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AssignedDriverId");

                    b.HasIndex("BrandId");

                    b.HasIndex("DocumentationDetailsId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ModelId");

                    b.HasIndex("TypeId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.VehicleBrand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Division")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubDivision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("VehicleBrands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9497f582-8512-443f-a457-0fb2b807656a"),
                            Category = "Howo",
                            Division = "T5G",
                            Name = "Sinotruk",
                            SubDivision = "Heavy Trucks"
                        },
                        new
                        {
                            Id = new Guid("9497f582-8512-443f-a457-0fb2b807656b"),
                            Category = "Sedan",
                            Division = "Camry",
                            Name = "Toyota",
                            SubDivision = "Hybrid"
                        },
                        new
                        {
                            Id = new Guid("1885aa2b-fd41-475b-863a-d55efca9f4d3"),
                            Category = "SUV",
                            Division = "Explorer",
                            Name = "Ford",
                            SubDivision = "XLT"
                        },
                        new
                        {
                            Id = new Guid("66694f49-8e27-4b78-8233-57f59b9b5036"),
                            Category = "Electric",
                            Division = "Model S",
                            Name = "Tesla",
                            SubDivision = "Plaid"
                        },
                        new
                        {
                            Id = new Guid("a479fb2c-b478-441a-b950-11635ac696a7"),
                            Category = "Compact",
                            Division = "Civic",
                            Name = "Honda",
                            SubDivision = "Sport"
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.VehicleEquipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EquipmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InstalledDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleEquipment");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.VehicleModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModelYear")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("VehicleModels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f17a7c8d-4a3b-4b81-b1e6-8d97b0f1a8c9"),
                            BrandId = new Guid("9497f582-8512-443f-a457-0fb2b807656b"),
                            ModelName = "Corolla",
                            ModelNo = "",
                            ModelYear = 2023
                        },
                        new
                        {
                            Id = new Guid("d91e3b7a-5c8e-4f72-a4d7-6c92b3d8a7e9"),
                            BrandId = new Guid("a479fb2c-b478-441a-b950-11635ac696a7"),
                            ModelName = "Civic",
                            ModelNo = "",
                            ModelYear = 2022
                        },
                        new
                        {
                            Id = new Guid("e8b2c7d6-3a9e-4b5f-bd17-2f3c9a7e6b8a"),
                            BrandId = new Guid("1885aa2b-fd41-475b-863a-d55efca9f4d3"),
                            ModelName = "F-150",
                            ModelNo = "",
                            ModelYear = 2024
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.VehicleType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Altered")
                        .HasColumnType("bit");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChassisNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Division")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoorsNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngineNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelCapacity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomberOfCylinder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeatsNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SteeringType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubDivision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransmissionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("VehicleTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("99e315c4-395d-4a32-9342-874f13628ebf"),
                            Altered = false,
                            Category = "Sedan",
                            Color = "Various",
                            Division = "Compact",
                            DoorsNo = "4",
                            FuelCapacity = "50L",
                            FuelType = "Petrol",
                            NomberOfCylinder = "4",
                            Notes = "Standard passenger sedan",
                            SeatsNo = "5",
                            SteeringType = "Left Hand",
                            SubDivision = "4-Door",
                            TransmissionType = "Automatic",
                            TypeName = "Passenger"
                        },
                        new
                        {
                            Id = new Guid("67f85360-095e-4f42-ac74-1f7790084237"),
                            Altered = false,
                            Category = "Pick Up",
                            Color = "White",
                            Division = "Pick Up 3 Ton",
                            DoorsNo = "4",
                            FuelCapacity = "80L",
                            FuelType = "Diesel",
                            NomberOfCylinder = "6",
                            Notes = "Heavy-duty transport vehicle",
                            SeatsNo = "6",
                            SteeringType = "Right Hand",
                            SubDivision = "Double Cabin",
                            TransmissionType = "Manual",
                            TypeName = "Transport"
                        },
                        new
                        {
                            Id = new Guid("8d8f6f0b-dd69-478e-9f6e-66ba77908a6d"),
                            Altered = false,
                            Category = "Construction",
                            Color = "Yellow",
                            Division = "Excavator",
                            DoorsNo = "1",
                            FuelCapacity = "200L",
                            FuelType = "Diesel",
                            NomberOfCylinder = "8",
                            Notes = "Used for construction projects",
                            SeatsNo = "1",
                            SteeringType = "Joystick",
                            SubDivision = "Hydraulic",
                            TransmissionType = "Hydraulic",
                            TypeName = "Equipment"
                        });
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.DriverSafetyCompliance", b =>
                {
                    b.HasOne("AssetManagement.Domain.Entities.Driver", "Driver")
                        .WithMany("SafetyCompliances")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Entities.SafetyCriteria", "SafetyCriteria")
                        .WithMany()
                        .HasForeignKey("SafetyCriteriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("SafetyCriteria");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.InspectionRecord", b =>
                {
                    b.HasOne("AssetManagement.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.MaintenanceRecord", b =>
                {
                    b.HasOne("AssetManagement.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("MaintenanceRecords")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.Permit", b =>
                {
                    b.HasOne("AssetManagement.Domain.Entities.Vehicle", null)
                        .WithMany("Permits")
                        .HasForeignKey("VehicleId");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.SafetyEquipment", b =>
                {
                    b.HasOne("AssetManagement.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.Vehicle", b =>
                {
                    b.HasOne("AssetManagement.Domain.Entities.Driver", "AssignedDriver")
                        .WithMany()
                        .HasForeignKey("AssignedDriverId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("AssetManagement.Domain.Entities.VehicleBrand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Entities.DocumentationDetails", "DocumentationDetails")
                        .WithMany()
                        .HasForeignKey("DocumentationDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AssetManagement.Domain.Entities.VehicleModel", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AssetManagement.Domain.Entities.VehicleType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AssetManagement.Domain.Entities.VehicleType", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicleTypeId");

                    b.Navigation("AssignedDriver");

                    b.Navigation("Brand");

                    b.Navigation("DocumentationDetails");

                    b.Navigation("Location");

                    b.Navigation("Model");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.VehicleEquipment", b =>
                {
                    b.HasOne("AssetManagement.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("InstalledEquipment")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.VehicleModel", b =>
                {
                    b.HasOne("AssetManagement.Domain.Entities.VehicleBrand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.Driver", b =>
                {
                    b.Navigation("SafetyCompliances");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.Vehicle", b =>
                {
                    b.Navigation("InstalledEquipment");

                    b.Navigation("MaintenanceRecords");

                    b.Navigation("Permits");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.VehicleBrand", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("AssetManagement.Domain.Entities.VehicleType", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
